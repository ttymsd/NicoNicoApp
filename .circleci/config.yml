version: 2

jobs:
  checkout:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    steps:
      - checkout
      - run:
          name: Create local.properties
          command: ./create_properties.sh
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - save_cache:
          paths:
            - ~/code
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}

  test:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: build
          command: ./gradlew :app:assembleDevelopDebug
      - save_cache:
          paths:
            - ~/code/app/build
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
workflows:
  version: 2
  test_and_upload_fabric:
    jobs:
      - checkout:
          filters:
            tags:
              ignore: /^release.*/
      - test:
          requires:
            - checkout
      - build:
          requires:
            - test
