apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file("script/gradle/aspect.gradle")

android {
  compileSdkVersion COMPILE_SDK_VERSION as int
  buildToolsVersion BUILD_TOOLS_VERSION

  Properties properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())

  defaultConfig {
    applicationId "com.bonborunote.niconicoviewer"
    minSdkVersion 21
    targetSdkVersion TARGET_SDK_VERSION as int
    versionCode VERSION_CODE as int
    versionName VERSION_NAME
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    multiDexEnabled true
  }
  dataBinding {
    enabled = true
  }

  buildTypes {
    debug {
      testCoverageEnabled true
      applicationIdSuffix ".debug"
    }

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/services/javax.annotation.processing.Processor'
    exclude 'META-INF/rxjava.properties'
  }

  lintOptions {
    lintConfig file('../config/lint.xml')
    xmlReport true
  }

  def branch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
  def message = "git log -1 --pretty=%H:%s $branch".execute().text.trim()
  flavorDimensions "mode"
  productFlavors {
    develop {
      dimension "mode"
    }

    product {
      dimension "mode"
    }
  }

  configurations {
    androidTestCompile.exclude group: 'com.android.support', module: 'support-annotations'
  }
}

androidExtensions {
  experimental = true
}

repositories {
  jcenter()
  maven { url "http://dl.bintray.com/ttymsd/maven" }
}

dependencies {
  implementation project(':common')
  implementation project(':resources')
  implementation project(':network')
  implementation project(':groupie-aac-plugin')
  implementation project(':player-domain')
  implementation project(':player-infra')
  implementation project(':player-usecase')
  implementation project(':player-ui')
  implementation project(':search-domain')
  implementation project(':search-infra')
  implementation project(':search-usecase')
  implementation project(':search-ui')
  implementation project(':detail-domain')
  implementation project(':detail-infra')
  implementation project(':detail-usecase')
  implementation project(':detail-ui')
  implementation project(':latest-domain')
  implementation project(':latest-infra')
  implementation project(':latest-usecase')
  implementation project(':latest-ui')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$COROUTINES_VERSION"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$COROUTINES_VERSION"

  // wear
  implementation "com.google.android.gms:play-services-wearable:$GOOGLE_SERVICE_VERSION"

  // firebase
  //  implementation "com.google.firebase:firebase-core:$GOOGLE_SERVICE_VERSION"
  //  implementation "com.google.firebase:firebase-perf:$GOOGLE_SERVICE_VERSION"

  // support library
  implementation "com.android.support:support-annotations:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:support-compat:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:support-core-utils:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:support-core-ui:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:support-media-compat:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:support-fragment:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:appcompat-v7:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:design:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:recyclerview-v7:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:cardview-v7:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support:customtabs:$SUPPORT_PACKAGE_VERSION"
  implementation "com.android.support.constraint:constraint-layout:$CONSTRAINT_LAYOUT_VERSION"
  implementation "com.google.android.gms:play-services-ads:$GOOGLE_SERVICE_VERSION"

  // ui support
  implementation "jp.bglb.bonboru:coordinator-behaviors:$COORDINATOR_BEHAVIORS_VERSION"
  implementation "com.xwray:groupie:$GROUPIE"
  implementation "com.xwray:groupie-databinding:$GROUPIE"
  implementation "com.xwray:groupie-kotlin-android-extensions:$GROUPIE"
  kapt "com.android.databinding:compiler:$DATABIDING_VERSION"

  // Navigation
  implementation "android.arch.navigation:navigation-fragment:1.0.0-alpha01"
  implementation "android.arch.navigation:navigation-ui:1.0.0-alpha01"

  // multidex
  implementation "com.android.support:multidex:$MULTI_DEX_VERSION"

  // DI
  implementation "org.kodein.di:kodein-di-generic-jvm:$KODEIN_VERSION"
  implementation "org.kodein.di:kodein-di-framework-android:$KODEIN_VERSION"

  // PDS
  // ViewModel and LiveData
  implementation "android.arch.lifecycle:extensions:1.1.1"
  // alternatively, just ViewModel
  implementation "android.arch.lifecycle:viewmodel:1.1.1"
  // alternatively, just LiveData
  implementation "android.arch.lifecycle:livedata:1.1.1"
  kapt "android.arch.lifecycle:compiler:1.1.1"

  // Room (use 1.1.0-beta2 for latest beta)
  implementation "android.arch.persistence.room:runtime:1.0.0"
  kapt "android.arch.persistence.room:compiler:1.0.0"

  // Paging
  implementation "android.arch.paging:runtime:1.0.0-beta1"

  // reactive
  implementation "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"
  implementation "io.reactivex.rxjava2:rxandroid:$RXJAVA_ANDROID_EXTENSION_VERSION"

  // network
  implementation "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
  implementation "com.squareup.okhttp3:okhttp-urlconnection:$OKHTTP_VERSION"
  implementation "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
  implementation "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
  implementation "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
  implementation "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
  implementation('com.squareup.retrofit2:converter-simplexml:2.4.0') {
    exclude module: 'stax'
    exclude module: 'stax-api'
    exclude module: 'xpp3'
  }

  // glide
  implementation "com.github.bumptech.glide:glide:4.7.1"
  implementation("com.github.bumptech.glide:okhttp3-integration:4.7.1") {
    exclude group: "com.squareup.okhttp3", module: "okhttp"
  }
  kapt "com.github.bumptech.glide:compiler:4.7.1"

  // exoplayer
  implementation "com.google.android.exoplayer:exoplayer-core:$EXOPLAYER"
  implementation "com.google.android.exoplayer:exoplayer-dash:$EXOPLAYER"
  implementation "com.google.android.exoplayer:exoplayer-hls:$EXOPLAYER"
  implementation "com.google.android.exoplayer:exoplayer-smoothstreaming:$EXOPLAYER"
  implementation "com.google.android.exoplayer:exoplayer-ui:$EXOPLAYER"
  implementation "com.google.android.exoplayer:extension-okhttp:$EXOPLAYER"

  // parser
  implementation "com.google.code.gson:gson:$GSON_VERSION"

  implementation "com.jakewharton.threetenabp:threetenabp:$THREE_TEN_ABP_VERSION"

  implementation "org.aspectj:aspectjrt:$ASPECTJ_VERSION"

  // debugging
  ["hyperion-core", "hyperion-attr", "hyperion-measurement", "hyperion-disk", "hyperion-recorder", "hyperion-phoenix", "hyperion-crash",
   "hyperion-shared-preferences", "hyperion-geiger-counter", "hyperion-timber"].forEach {
    debugImplementation "com.willowtreeapps.hyperion:$it:0.9.23"
  }
  
  implementation "com.jakewharton.timber:timber:${TIMBER_VERSION}"
  implementation("com.crashlytics.sdk.android:crashlytics:${CRASHLYTICS_VERSION}@aar") {
    transitive = true
  }
  debugImplementation "com.facebook.stetho:stetho:$STETHO_VERSION"
  debugImplementation "com.facebook.stetho:stetho-okhttp3:$STETHO_VERSION"

  testImplementation "junit:junit:4.12"

  // for instrumentation
  androidTestImplementation "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
  androidTestImplementation(
      "com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
    exclude group: 'com.android.support', module: 'support-v4'
    exclude group: 'com.android.support', module: 'recyclerview-v7'
    exclude group: 'com.android.support', module: 'design'
  }
  androidTestImplementation(
      "com.android.support.test.espresso:espresso-intents:$ESPRESSO_VERSION") {
    exclude group: 'com.android.support', module: 'support-annotations'
  }
  androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:2.1.3"
}

detekt {
  profile("main") {
    config = "$rootDir/detekt-config.yml"
    filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
    // 各モジュールの解析結果を1ファイルにまとめるのでrootに出力するようにする
    output = "$rootDir/build/reports/detekt.xml"
  }
}

//apply plugin: 'com.google.gms.google-services'
